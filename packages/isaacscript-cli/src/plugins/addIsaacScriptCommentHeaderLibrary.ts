/** This plugin adds an explanatory header to the top of the generated Lua code. */

import * as ts from "typescript";
import * as tstl from "typescript-to-lua";

const INFORMATIONAL_HEADER = `--[[

isaacscript-common v0.0.0

This is the "isaacscript-common" standard library, which was created with the IsaacScript tool.

This library contains many helper functions and features that abstract away much of the complexity
in working with the Isaac API. For more information on how to use this library, see the manual:
https://isaacscript.github.io/main/isaacscript-common-in-lua

DO NOT EDIT THIS FILE DIRECTLY!

The Lua code in this file is not actually the source code for the program. Rather, it was
automatically generated from higher-level TypeScript code, and might be hard to read. If you want to
understand how the code in this library works, you should read the actual TypeScript source code
directly, which is located at:
https://github.com/IsaacScript/isaacscript/tree/main/packages/isaacscript-common

Please open bug reports and pull requests on GitHub. You can also ask questions in the Discord
server: https://discord.gg/KapmKQ2gUD

Note that if you are writing your mod in TypeScript, using this file is unnecessary, as every
"isaacscript-common" feature will be automatically bundled with your mod as needed. This also has
the advantage of every function invocation being type safe, which makes runtime errors impossible.
If you are an experienced programmer and are writing a medium to large scale mod, you will almost
certainly want to be using TypeScript instead of Lua to ensure that all of your code glues together
properly. For more information, see the website: https://isaacscript.github.io/main/features

--]]

`;

const plugin: tstl.Plugin = {
  beforeEmit(
    _program: ts.Program,
    _options: tstl.CompilerOptions,
    _emitHost: tstl.EmitHost,
    result: tstl.EmitFile[],
  ) {
    for (const file of result) {
      file.code = `${INFORMATIONAL_HEADER}${file.code}`;
    }
  },
};

// ts-prune-ignore-next
export default plugin;
