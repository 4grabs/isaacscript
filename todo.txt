TODO:
- finish writing comments for constantsMax.ts
- finish fixing Forgotten Fables

- move passive items for eden set to isaacscript-common

- clarify specific GridEntityType(s) for: GridEntityRock & GridEntitySpikes
- make state enum for GridEntitySpikes
- make state enum for GridEntityPit

- NEW DOCUMENTATION WEBSITE
- redo docs so that function examples are in JSDoc
  - confirm that POST_USE_CARD and POST_USE_PILL and POST_NPC_UPDATE and POST_FAMILIAR_UPDATE and POST_FAMILIAR_INIT are documented
  - confirm that ModCallback is documented

LINTER:
- make lint rule for "declare something that is not global in file with one or more imports"
- make lint rule for capital letter on const as const
- lint rule to check for "BOSS2" --> "BOSS_2" and "BOSS2_WATER_THRASHING" --> "BOSS2_WATER_THRASHING" and "BOSS2INTRO_WATER_EXPLOSION" --> "BOSS_2_INTRO_WATER_EXPLOSION", has to be 4 characters or more
- linter rule audit (xo etc)

implement in isaacscript-common:
- trophy can move to isaacscript common for respawning purposes
  - when respawning, don't play appear animation
- use tem's entity check function
- make spawn never spawn non-existent entities
- write test for isHorsePill, test every valid horse pill value
- write test for isGoldenTrinket, test every valid horse trinket value
- test getCurrentDimension() function to see if Xalum is right // cspell:disable-line
- PHD_PILL_CONVERSIONS to isaacscript-common
- POST_PLAYER_COLLECTIBLE_ADDED
- POST_PLAYER_COLLECTIBLE_REMOVED
- POST_AMBUSH_DONE
- POST_BOMB_DETONATE
- check for item unlocked - https://github.com/Zamiell/racing-plus/blob/main/src/features/mandatory/errors.ts#L80-L165
- bible detection for POST FATAL DAMAGE
- isNewPickup
- compareEntity (to see what changes with dice room effect)
- DICE_ROOM_ACTIVATED
- intercept shovel for decorations
- collectible morph to glitched item
- function getRandomEnumValue
- function to start challenge room
- think about how to track a custom entity that emulates a collectible (pseudo-persistent)
  - add isaacscript-common functionality for persistent entities
- make isValidCollectible (from isaac-typescript-definitions) for mods
- StageAPI2
- experiment with isaacscript monorepo
  - wait for JSONC fix: https://github.com/nrwl/nx/issues/10393

IsaacScript announcements:
- Breaking changes:
  - All functions that take a specific kind of type (e.g. `EntityType`, `PlayerVariant`, etc.) are now no longer in a union with `int`. This makes the API much more type-safe than before. The flip side of this is that you must change any self-defined enums like `CollectibleTypeCustom` to an object instead. See the docs for more details: https://isaacscript.github.io/docs/gotchas#extending-enums----custom-enums
  - DefaultMap no longer passes the key to the factory function. This means you can clean up the unused `_key` argument in all of your default maps. In the rare case that you are actually using the key in the factory, you can pass it explicitly as a normal argument.
- Added the appropriate `HORSE_` enum values to the `PillColor` enum.
- Added a `Zero` constant for every flag enum. (e.g. `EntityFlagZero`, `TearFlagZero`, and so on.)
- The "max" constants are changed, with many new ones added:
  - Collectibles:
    - `FIRST_COLLECTIBLE_TYPE`
    - `LAST_COLLECTIBLE_TYPE`
    - `LAST_VANILLA_COLLECTIBLE_TYPE`
    - `FIRST_MODDED_COLLECTIBLE_TYPE`
    - `NUM_VANILLA_COLLECTIBLE_TYPES`
    - `NUM_MODDED_COLLECTIBLE_TYPES`
    - `NUM_COLLECTIBLE_TYPES`
  - Trinkets:
    - `NUM_TRINKET_TYPES`
    - `NUM_VANILLA_TRINKET_TYPES`
    - `NUM_MODDED_TRINKET_TYPES`
    - `FIRST_TRINKET_TYPE`
    - `LAST_TRINKET_TYPE`
    - `LAST_VANILLA_TRINKET_TYPE`
    - `FIRST_MODDED_TRINKET_TYPE`
  - Cards:
    - `NUM_CARDS`
    - `NUM_VANILLA_CARDS`
    - `NUM_MODDED_CARDS`
    - `FIRST_CARD`
    - `LAST_CARD`
    - `MAX_VANILLA_CARD`
    - `FIRST_MODDED_CARD`
  - Pill effects:
    - `NUM_PILL_EFFECTS`
    - `NUM_VANILLA_PILL_EFFECTS`
    - `NUM_MODDED_PILL_EFFECTS`
    - `FIRST_PILL_EFFECT`
    - `LAST_PILL_EFFECT`
    - `LAST_VANILLA_PILL_EFFECT`
    - `FIRST_MODDED_PILL_EFFECT`
  - Pill colors:
    - `FIRST_PILL_COLOR`
    - `LAST_NORMAL_PILL_COLOR`
    - `FIRST_HORSE_PILL_COLOR`
    - `LAST_HORSE_PILL_COLOR`
    - `NUM_NORMAL_PILL_COLORS`
  - Players:
    - `FIRST_CHARACTER`
    - `LAST_VANILLA_CHARACTER`
    - `FIRST_MODDED_CHARACTER`
  - Other:
    - `FIRST_STAGE`
    - `LAST_STAGE`
    - `FIRST_ROOM_TYPE`
    - `LAST_ROOM_TYPE`
- Added the following helper functions:
  - `fillLevelWithRedRooms`
  - `getAllDimensions`
  - `getAllCards`
  - `getModdedCards`
  - `getVanillaCards`
  - `getAllPillEffects`
  - `getModdedPillEffects`
  - `getVanillaPillEffects`
  - `getAllPillColors`
  - `getNormalPillColors`
  - `getHorsePillColors`
  - `getCollectibleTypeRange`
  - `getVanillaCollectibleTypeRange`
  - `getModdedCollectibleTypes`
  - `getTrinketTypes`
  - `getVanillaTrinketTypes`
  - `getModdedTrinketTypes`
  - `getDoorEnterPosition`
  - `getDoorEnterPositionOffset`
  - `getNormalPillColorFromHorse`
  - `getPits`
  - `getPlayersWithTrinket`
  - `getPoops`
  - `getPressurePlates`
  - `getRandomEnumValue`
  - `getRocks`
  - `getRoomNeighbors`
  - `getRoomShapeNeighborGridIndexDeltas`
  - `getSpikes`
  - `getTNT`
  - `inMineShaft`
  - `isHeart`
  - `isCoin`
  - `isKey`
  - `isBomb`
  - `isPoop`
  - `isSack`
  - `isPill`
  - `isBattery`
  - `isCollectible`
  - `isCardPickup`
  - `isTrinket`
  - `isValidCollectibleType`
  - `pickingUpItemIsCollectible`
  - `pickingUpItemIsTrinket`
  - `roomGridIndexToXY`
- Added the following custom callbacks:
  - `POST_GRID_ENTITY_RENDER`
  - `POST_DOOR_RENDER`
  - `POST_DOOR_UPDATE`
  - `POST_PIT_RENDER`
  - `POST_PIT_UPDATE`
  - `POST_POOP_RENDER`
  - `POST_POOP_UPDATE`
  - `POST_PRESSURE_PLATE_RENDER`
  - `POST_PRESSURE_PLATE_UPDATE`
  - `POST_ROCK_RENDER`
  - `POST_ROCK_UPDATE`
  - `POST_SPIKES_RENDER`
  - `POST_SPIKES_UPDATE`
  - `POST_TNT_RENDER`
  - `POST_TNT_UPDATE`
- You can now register several player-based custom callbacks using `PlayerVariant` and `PlayerType` as optional 2nd and 3rd arguments, respectively (e.g. `PRE_BERSERK_DEATH`).
- You can now register all custom grid entity callbacks using an optional 3rd argument of grid entity variant.
- Added the following custom console commands:
  - `map` - Reveals the entire map, including Ultra Secret Rooms.
  - `doordisplay` - Show debugging information next to every door.
  - `pitdisplay` - Show debugging information next to every pit.
  - `poopdisplay` - Show debugging information next to every poop.
  - `pressureplatedisplay` - Show debugging information next to every pressure plate.
  - `rockdisplay` - Show debugging information next to every rock.
  - `spikesdisplay` - Show debugging information next to every spikes.
  - `tntdisplay` - Show debugging information next to every TNT.
- `Vector.Zero` and `Vector.One` are now deprecated and will cause compiler errors. Use the `VectorZero` and `VectorOne` constants from the standard library instead, which are guaranteed to be safe. (Alternatively, you can create your own constants that are local to your mod.)
