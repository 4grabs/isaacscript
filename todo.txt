- lint rule change: Math.floor(max-line-length / 3)

- add strict enum rule to isaacscript plugin

- trophy can move to isaacscript common for respawning purposes
  - when respawning, don't play appear animation

- experiment with isaacscript monorepo

- redo docs so that function examples are in JSDoc
  - confirm that POST_USE_CARD and POST_USE_PILL and POST_NPC_UPDATE and POST_FAMILIAR_UPDATE and POST_FAMILIAR_INIT are documented
  - confirm that ModCallback is documented

LINTER:
- make lint rule for "declare something that is not global in file with one or more imports"
- make lint rule for capital letter on const as const
- lint rule to check for "BOSS2" --> "BOSS_2" and "BOSS2_WATER_THRASHING" --> "BOSS2_WATER_THRASHING" and "BOSS2INTRO_WATER_EXPLOSION" --> "BOSS_2_INTRO_WATER_EXPLOSION", has to be 4 characters or more
- linter rule audit (xo etc)

TODO:
- check every PlayerType --> PlayerVariant
- add every PlayerType where missing on search of PlayerVariant
- NEW DOCUMENTATION WEBSITE

implement in isaacscript-common:
- use tem's entity check function
- make spawn never spawn non-existent entities
- write test for isHorsePill, test every valid horse pill value
- write test for isGoldenTrinket, test every valid horse trinket value
- test getCurrentDimension() function to see if Xalum is right // cspell:disable-line
- PHD_PILL_CONVERSIONS to isaacscript-common
- make character args for every PlayerVariant callback
- POST_GREED_WAVE
- POST_PLAYER_COLLECTIBLE_ADDED
- POST_PLAYER_COLLECTIBLE_REMOVED
- POST_AMBUSH_DONE
- POST_BOMB_DETONATE
- check for item unlocked - https://github.com/Zamiell/racing-plus/blob/main/src/features/mandatory/errors.ts#L80-L165
- bible detection for POST FATAL DAMAGE
- isNewPickup
- compareEntity (to see what changes with dice room effect)
- DICE_ROOM_ACTIVATED
- intercept shovel for decorations
- collectible morph to glitched item
- function getRandomEnumValue
- function to start challenge room
- think about how to track a custom entity that emulates a collectible (pseudo-persistent)
  - add isaacscript-common functionality for persistent entities
- make isValidCollectible (from isaac-typescript-definitions) for mods
- StageAPI2


IsaacScript announcements:
- Added the appropriate `HORSE_` enum values to the `PillColor` enum.
- Added a `Zero` constant for every flag enum. (e.g. `EntityFlagZero`, `TearFlagZero`, and so on.)
- Added the following constants:
  - `MAX_VANILLA_PLAYER_TYPE`
  - `MAX_NORMAL_PILL_COLOR`
- Added the following helper functions:
  - `fillLevelWithRedRooms`
  - `getDoorEnterPosition`
  - `getDoorEnterPositionOffset`
  - `getNormalPillColorFromHorse`
  - `getPlayersWithTrinket`
  - `getRandomEnumValue`
  - `getRoomNeighbors`
  - `getRoomShapeNeighborGridIndexDeltas`
  - `inMineShaft`
  - `pickingUpItemIsCollectible`
  - `pickingUpItemIsTrinket`
  - `roomGridIndexToXY`
- Added the following custom console commands:
  - `map` - Reveals the entire map, including Ultra Secret Rooms.
- `Vector.Zero` and `Vector.One` are now deprecated and will cause compiler errors. Use the `VectorZero` and `VectorOne` constants from the standard library instead, which are guaranteed to be safe. (Alternatively, you can create your own constants that are local to your mod.)
